knitr::opts_chunk$set(echo = TRUE)
plot(density(GOOD$s100b),
xlab = "s100b Protein Values",
ylab = "Density Curve",
xlim = c(0.03, 2.25),
col = "red",
lwd = 2,
main = "Density Curves by Outcome")
plot(density(GOOD$s100b),
xlab = "s100b Protein Values",
ylab = "Density Curve",
xlim = c(0.03, 2.25),
col = "red",
lwd = 2,
main = "Density Curves by Outcome")
knitr::opts_chunk$set(echo = TRUE)
library(datasets)
library(LearnBayes)
data(studentdata)
head(studentdata, n = 6) # Top six rows
dim(studentdata) # Dimensions
summary(studentdata) # Summary of each column
studentdata$HoursSlept <- studentdata$WakeUp - studentdata$ToSleep
names(studentdata)
head(studentdata)
dim(studentdata)
boxplot(studentdata$HoursSlept,
ylab = "Hours Slept",
main = "Box Plot of Hours Slept (BGSU Data)",
col = "mistyrose")
hist(studentdata$HoursSlept,
freq = TRUE,
xlab = "Hours Slept",
ylab = "Frequency",
col = "red",
main = "Histogram of Hours Slept",
sub = "Bowling Green University Student Data")
# Include a rug plot to show where the data points lie exactly:
rug(studentdata$HoursSlept, side = 1, col = "blue")
hist(studentdata$HoursSlept,
freq = FALSE,
density = 10, # fill amount of lines
xlab = "Hours Slept",
ylab = "Density",
col = "black",
main = "Density Histogram of Hours Slept & Non-parametric Density Curve",
sub = "Bowling Green University Student Data")
# The y-axis is rescaled, so that the total area sums up to 1.
lines(density(studentdata$HoursSlept,
na.rm = TRUE), # na.rm = TRUE means remove NA values from function
col = "red",
lwd = 2)
par(mfrow = c(1, 2)) # Set up a frame with 1 row and 2 columns
# We fill up the blank frame with graphs, 1 by 1.
# Segregate data by gender:
Males <- subset(studentdata, studentdata$Gender == "male")
Females <- subset(studentdata, studentdata$Gender == "female")
# Plot density histogram for males:
hist(Males$HoursSlept,
freq = FALSE,
density = 10,
breaks = 12,
xlab = "Hours Slept",
ylab = "Density",
ylim=c(0, 0.3),
col = "black",
main = "Density Histogram of \n Hours Slept of Males",
sub = "Bowling Green University Student Data")
lines(density(Males$HoursSlept,
na.rm = TRUE), # na.rm means remove NA values from function
col = "blue",
lwd = 2)
# Plot a normal curve:
mean_Males = mean(Males$HoursSlept, na.rm = TRUE) # Exclude NA's
sd_Males = sd(Males$HoursSlept, na.rm = TRUE) # Exclude NA's
curve(dnorm(x, mean = mean_Males, sd = sd_Males),
col = "green",
lwd = 2,
add = TRUE)
# Plot a density histogram for females:
hist(Females$HoursSlept,
freq = FALSE,
density = 20,
breaks = 12,
xlab = "Hours Slept",
ylab = "Density",
ylim=c(0, 0.3),
col = "black",
main = "Density Histogram of \n Hours Slept of Females",
sub = "Bowling Green University Student Data")
lines(density(Females$HoursSlept,
na.rm = TRUE), # na.rm means remove NA values from function
col = "pink",
lwd = 2)
# Plot a normal curve: (use modelling values from summary. This is NOT a fit)
mean_Females = mean(Females$HoursSlept, na.rm = TRUE) # Exclude NA's
sd_Females = sd(Females$HoursSlept, na.rm = TRUE) # Exclude NA's
curve(dnorm(x, mean = mean_Females, sd = sd_Females),
col = "magenta",
lwd = 2,
add = TRUE)
# Close the parallel plot.
par(mfrow = c(1,1))
shapiro.test(studentdata$HoursSlept)
shapiro.test(Males$HoursSlept)
shapiro.test(Females$HoursSlept)
x = rnorm(n = 50, mean = 5, sd = 0.2)
y = rnorm(n = 50, mean = 5, sd = 0.2)
t.test(x,y,, var.equal = TRUE)
x = rnorm(n = 50, mean = 5, sd = 0.2)
y = rnorm(n = 50, mean = 5.2, sd = 0.2)
t.test(x,y,, var.equal = TRUE)
x = rnorm(n = 50, mean = 5, sd = 0.1)
y = rnorm(n = 50, mean = 5, sd = 1)
t.test(x,y,, var.equal = TRUE) # Two-sample t-test
t.test(x,y,, var.equal = FALSE) # Welch two-sample t-test
wilcox.test(Males$HoursSlept,
Females$HoursSlept,
alternative = "two.sided", # Can be "greater" or "less"
paired = FALSE)
t.test(Males$HoursSlept,
Females$HoursSlept,
var.equal = FALSE)
# install.packages("pROC")
library(pROC)
data(aSAH) # Load the data.
dim(aSAH) # Examine the dimensions.
head(aSAH, n = 5) # Examine the top 5 rows.
GOOD <- subset(aSAH, aSAH$outcome == "Good")
POOR <- subset(aSAH, aSAH$outcome == "Poor")
summary(GOOD$s100b)
summary(POOR$s100b)
plot(density(GOOD$s100b),
xlab = "s100b Protein Values",
ylab = "Density Curve",
xlim = c(0.03, 2.25),
col = "red",
lwd = 2,
main = "Density Curves by Outcome")
# Overlay another plot command using 'lines'
lines(density(POOR$s100b),
col = "blue",
lwd = 2)
legend("topright",
legend = c("Good outcome patients", "Poor outcome patients"),
col = c("red", "blue"))
plot(density(GOOD$s100b),
xlab = "s100b Protein Values",
ylab = "Density Curve",
xlim = c(0.03, 2.25),
col = "red",
lwd = 2,
main = "Density Curves by Outcome")
# Overlay another plot command using 'lines'
lines(density(POOR$s100b),
col = "blue",
lwd = 2)
legend("topright",
legend = c("Good outcome patients", "Poor outcome patients"),
pt.bg = c("red", "blue"))
plot(density(GOOD$s100b),
xlab = "s100b Protein Values",
ylab = "Density Curve",
xlim = c(0.03, 2.25),
col = "red",
lwd = 2,
main = "Density Curves by Outcome")
# Overlay another plot command using 'lines'
lines(density(POOR$s100b),
col = "blue",
lwd = 2)
legend("topright",
legend = c("Good outcome patients", "Poor outcome patients"))
plot(density(GOOD$s100b),
xlab = "s100b Protein Values",
ylab = "Density Curve",
xlim = c(0.03, 2.25),
col = "red",
lwd = 2,
main = "Density Curves by Outcome")
# Overlay another plot command using 'lines'
lines(density(POOR$s100b),
col = "blue",
lwd = 2)
legend("topright",
pch = 21,
legend = c("Good outcome patients", "Poor outcome patients"),
col = c("red", "blue"))
plot(density(GOOD$s100b),
xlab = "s100b Protein Values",
ylab = "Density Curve",
xlim = c(0.03, 2.25),
col = "red",
lwd = 2,
main = "Density Curves by Outcome")
# Overlay another plot command using 'lines'
lines(density(POOR$s100b),
col = "blue",
lwd = 2)
legend("topright",
pch = 1,
legend = c("Good outcome patients", "Poor outcome patients"),
col = c("red", "blue"))
plot(density(GOOD$s100b),
xlab = "s100b Protein Values",
ylab = "Density Curve",
xlim = c(0.03, 2.25),
col = "red",
lwd = 2,
main = "Density Curves by Outcome")
# Overlay another plot command using 'lines'
lines(density(POOR$s100b),
col = "blue",
lwd = 2)
legend("topright",
pch = 2,
legend = c("Good outcome patients", "Poor outcome patients"),
col = c("red", "blue"))
plot(density(GOOD$s100b),
xlab = "s100b Protein Values",
ylab = "Density Curve",
xlim = c(0.03, 2.25),
col = "red",
lwd = 2,
main = "Density Curves by Outcome")
# Overlay another plot command using 'lines'
lines(density(POOR$s100b),
col = "blue",
lwd = 2)
legend("topright",
pch = -,
plot(density(GOOD$s100b),
xlab = "s100b Protein Values",
ylab = "Density Curve",
xlim = c(0.03, 2.25),
col = "red",
lwd = 2,
main = "Density Curves by Outcome")
# Overlay another plot command using 'lines'
lines(density(POOR$s100b),
col = "blue",
lwd = 2)
legend("topright",
pch = 11,
legend = c("Good outcome patients", "Poor outcome patients"),
col = c("red", "blue"))
GOOD_test <- subset(GOOD, GOOD$s100b >= 0.2)
View(POOR)
View(GOOD_test)
View(GOOD_test)
View(GOOD)
View(Females)
View(POOR)
POOR_test <- subset(POOR, POOR$s100b >= 0.2)
names(MyROC) # Names of variables in output
MyROC <- roc(aSAH$outcome,
aSAH$s100b,
levels = c("Good","Poor"),
direction = "<")
names(MyROC) # Names of variables in output
MyROC$auc # Area under curve
ci.auc(MyROC) # Confidence interval for area under curve
MyROC <- roc(aSAH$outcome,
aSAH$s100b,
levels = c("Good","Poor"),
direction = "<")
names(MyROC)
MyROC$auc # Area under curve
ci.auc(MyROC) # Confidence interval for area under curve
# True auc = AUC 95% confidence interval: 0.6301 <= AUC <= 0.8326
# Question: Is 50% success rate inside the AUC or outside?
# Answer: It is outside the interval. This means that the protein measurement of
# s100b is a significant separator of poor prognosis and good prognosis.
# Create a separate table for sensitivities, specificities, and the cut-offs.
MyROC1 <- data.frame(Sensitivity = MyROC$sensitivities,
Specificity = MyROC$specificities,
CutOff = MyROC$thresholds) # threshold = cut-off value
dim(MyROC1)
MyROC1
# Operation ROC curve:
plot(1 - MyROC1$Specificity,
MyROC1$Sensitivity,
xlab = "1 - Specificity",
ylab = "Sensitivity",
type = "l",
col = "red",
main = "ROC Curve of the Protein s100b")
abline(0, 1, # Intercept = 0, slope = 1
col = "black")
legend("bottomright",
legend = "AUC = 0.7314",
pch = 16,
col = "red",
lwd = 3)
MyROC1
plot(1 - MyROC1$Specificity,
MyROC1$Sensitivity,
xlab = "1 - Specificity",
ylab = "Sensitivity",
type = "l",
col = "red",
main = "ROC Curve of the Protein s100b")
# Overlay a line where the square sum of sensitivity and specificity = 1
abline(0, 1, # Intercept = 0, slope = 1
col = "black")
legend("bottomright",
legend = "ROC curve",
pch = 16,
col = "red",
lwd = 3)
# Add the arrows on the graph to show the ideal cut-off value.
arrows(0.0, 1.0, (1 - MyROC1$Specificity), MyROC1$Sensitivity,
col = "black")
arrows(0.0, 1.0, (1 - 0.8056), 0.6341,
col = "green",
lwd = 2)
knitr::opts_chunk$set(echo = TRUE)
library(datasets)
library(datasets)
library(LearnBayes)
data(studentdata)
?studentdata
install.packages("LearnBayes")
install.packages("LearnBayes")
dim(studentdata)
head(studentdata, n =10)
names(studentdata)
studentdata$HoursSlept <- studentdata$WakeUp - studentdata$ToSleep
dim(studentdata)
studentdata
boxplot(studentdata$HoursSlept,
ylab = "Hours slept",
main = "Box plot of hours slept (BGSU data)",
col = "mistyrose")
hist(studentdata$HoursSlept,
freq = TRUE,
xlab = "Hours slept",
ylab = "Frequency",
col = "red",
main = "Histogram of hours slept",
sub = "BGSU student data")
rug(studentdata$HoursSlept,
side = 1,
col = "blue")
hist(studentdata$HoursSlept,
freq = TRUE,
xlab = "Hours slept",
ylab = "Frequency",
col = "red",
main = "Histogram of hours slept",
sub = "BGSU student data")
rug(studentdata$HoursSlept,
side = 1,
col = "blue")
hist(studentdata$HoursSlept,
freq = TRUE,
xlab = "Hours slept",
ylab = "Frequency",
col = "red",
main = "Histogram of hours slept",
sub = "BGSU student data")
rug(studentdata$HoursSlept,
side = 1,
col = "blue")
hist(studentdata$HoursSlept,
freq = FALSE,
xlab = "Hours slept",
ylab = "Frequency",
col = "red",
main = "Histogram of hours slept",
sub = "BGSU student data")
hist(studentdata$HoursSlept,
freq = FALSE,
xlab = "Hours slept",
ylab = "Frequency",
col = "red",
main = "Histogram of hours slept",
sub = "BGSU student data")
lines(density(studentdata$HoursSlept,
na.rm = TRUE),
col = "blue",
lwd = 2)
par(mfrow = c(1, 2))
Males <- subset(studentdata,
studentdata$Gender == "male")
Females <- subset(studentdata,
studentdata$Gender == "female")
View(Males)
View(Females)
par(mfrow = c(1, 2))
Males <- subset(studentdata,
studentdata$Gender == "male")
Females <- subset(studentdata,
studentdata$Gender == "female")
hist(Males$HoursSlept,
freq = FALSE,
density = 10,
breaks = 12,
xlab = "Hours slept",
ylab = "Density",
ylim = c(0, 0.3),
col = "black",
main = "Density Histogram Males")
lines(density(Males$HoursSlept),
na.rm = TRUE,
col = "blue",
lwd = 2)
par(mfrow = c(1, 2)) # Set up a frame with 1 row and 2 columns
# We fill up the blank frame with graphs, 1 by 1.
# Segregate data by gender:
Males <- subset(studentdata, studentdata$Gender == "male")
Females <- subset(studentdata, studentdata$Gender == "female")
# Plot density histogram for males:
hist(Males$HoursSlept,
freq = FALSE,
density = 10,
breaks = 12,
xlab = "Hours Slept",
ylab = "Density",
ylim=c(0, 0.3),
col = "black",
main = "Density Histogram of \n Hours Slept of Males",
sub = "Bowling Green University Student Data")
lines(density(Males$HoursSlept,
na.rm = TRUE), # na.rm means remove NA values from function
col = "blue",
lwd = 2)
# Plot a normal curve:
mean_Males = mean(Males$HoursSlept, na.rm = TRUE) # Exclude NA's
sd_Males = sd(Males$HoursSlept, na.rm = TRUE) # Exclude NA's
curve(dnorm(x, mean = mean_Males, sd = sd_Males),
col = "green",
lwd = 2,
add = TRUE)
# Plot a density histogram for females:
hist(Females$HoursSlept,
freq = FALSE,
density = 20,
breaks = 12,
xlab = "Hours Slept",
ylab = "Density",
ylim=c(0, 0.3),
col = "black",
main = "Density Histogram of \n Hours Slept of Females",
sub = "Bowling Green University Student Data")
lines(density(Females$HoursSlept,
na.rm = TRUE), # na.rm means remove NA values from function
col = "pink",
lwd = 2)
# Plot a normal curve: (use modelling values from summary. This is NOT a fit)
mean_Females = mean(Females$HoursSlept, na.rm = TRUE) # Exclude NA's
sd_Females = sd(Females$HoursSlept, na.rm = TRUE) # Exclude NA's
curve(dnorm(x, mean = mean_Females, sd = sd_Females),
col = "magenta",
lwd = 2,
add = TRUE)
# Close the parallel plot.
par(mfrow = c(1,1))
shapiro.test(Males$HoursSlept)
shapiro.test(Females$HoursSlept)
x = rnorm(n = 50, mean = 5, sd = 0.2)
y = rnorm(n = 50, mean = 5, sd = 0.2)
t.test(x,y,, var.equal = TRUE)
x = rnorm(n = 50, mean = 5, sd = 0.2)
y = rnorm(n = 50, mean = 5.2, sd = 0.2)
t.test(x,y,, var.equal = TRUE)
x = rnorm(n = 50, mean = 5, sd = 0.1)
y = rnorm(n = 50, mean = 5, sd = 1)
t.test(x,y,, var.equal = TRUE) # Two-sample t-test
t.test(x,y,, var.equal = FALSE) # Welch two-sample t-test
wilcox.test(Males$HoursSlept,
Females$HoursSlept,
alternative = "two.sided", # Can be "greater" or "less"
paired = FALSE)
t.test(Males$HoursSlept,
Females$HoursSlept,
var.equal = FALSE)
